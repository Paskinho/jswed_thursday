class Car {
    #weels // приватное свойство, нельзя поменять
    constructor(brand, maxSpeed) {
        this.brand = brand
        this.maxSpeed = maxSpeed
        this.#weels = 4
    }
    showMaxSpeed() {
        console.log(`${this.brand} has max speed ${this.maxSpeed}`)
    }
    getWeelsCount() {
        console.log(this.#weels)
    }
    setWeels(value) {
        if (value === 3 || value === 4) {
            this.#weels = value
        }
    throw Error ('wrong weels count')
    }
}

const car1 = new Car('bmw', 200)
const car2 = new Car('opel', 222)



car1.showMaxSpeed()
car2.showMaxSpeed()

car1.getWeelsCount();


//STATIC METOD

class Car {
    static weels = 4 // приватной свойство, нельзя поменять
    constructor(brand, maxSpeed) {
        this.brand = brand
        this.maxSpeed = maxSpeed
    }
    static showWeels() {
        console.log(`this car have ${this.weels} weels`)
    }
}

Car.showWeels()

// this car have 4 weels

Заимствование класса: 
const Car1 = new Car('bmw', 200);

class SuperCar extends  Car {
    constructor(brand, maxSpeed) {
        super(brand, maxSpeed);
        this.weels = 6
    }
}

const car2 = new SuperCar('ferrari', 300)

console.dir(SuperCar)

